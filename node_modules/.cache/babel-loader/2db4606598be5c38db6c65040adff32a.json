{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ishpreetsingh/workspace/practice/my-app/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport APICall from './util';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ReactModal from 'react-modal'; // import Modal from \"react-modal\";\n\nimport './index.css';\nimport { products, columns } from './data';\nimport Customer from './customer';\nReactModal.setAppElement(\"#root\"); // class Customer extends React.Component {\n//     render() {\n//         if (!this.props.data) {\n//             return \"\";\n//         }\n//         console.log(\"Props: \", this.props);\n//         return (\n//             <div className=\"customer-data\">\n//                 {this.props.data.city}\n//                 <button onClick={this.props.onClick} >X</button>\n//             </div>\n//         );\n//     }\n// }\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: [],\n      currentCustomerIndex: null,\n      showModal: false\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  toggleModal() {\n    this.state.setIsOpen(!this.setState.isOpen);\n  }\n\n  handleOpenModal(index) {\n    this.setState({\n      showModal: true,\n      currentCustomerIndex: index\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n      currentCustomerIndex: null\n    });\n  }\n\n  render() {\n    let customers = products.slice(); // this.setState({ customers: customers });\n\n    this.state.customers = customers;\n\n    for (let i = 0; i < customers.length; i++) {\n      let currentProduct = products[i];\n      currentProduct[\"button\"] = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleOpenModal(i),\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 40\n      }, this);\n    }\n\n    let data = this.state.showModal ? this.state.customers[this.state.currentCustomerIndex] : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        keyField: \"city\",\n        data: customers,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n        id: \"modal\",\n        className: \"mymodal\",\n        isOpen: this.state.showModal,\n        contentLabel: \"Minimal Modal Example\",\n        overlayClassName: \"myoverlay\",\n        closeTimeoutMS: 200,\n        onRequestClose: this.handleCloseModal,\n        children: /*#__PURE__*/_jsxDEV(Customer, {\n          data: data,\n          onClick: this.handleCloseModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Panel, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ishpreetsingh/workspace/practice/my-app/src/index.js"],"names":["React","useState","ReactDOM","APICall","BootstrapTable","paginationFactory","ReactModal","products","columns","Customer","setAppElement","Panel","Component","constructor","props","state","customers","currentCustomerIndex","showModal","handleOpenModal","bind","handleCloseModal","toggleModal","setIsOpen","setState","isOpen","index","render","slice","i","length","currentProduct","data","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport APICall from './util';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ReactModal from 'react-modal';\n// import Modal from \"react-modal\";\nimport './index.css';\nimport { products, columns } from './data';\nimport Customer from './customer';\n\nReactModal.setAppElement(\"#root\");\n\n// class Customer extends React.Component {\n//     render() {\n//         if (!this.props.data) {\n//             return \"\";\n//         }\n//         console.log(\"Props: \", this.props);\n//         return (\n//             <div className=\"customer-data\">\n//                 {this.props.data.city}\n//                 <button onClick={this.props.onClick} >X</button>\n//             </div>\n//         );\n//     }\n// }\n\nclass Panel extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            customers: [],\n            currentCustomerIndex: null,\n            showModal: false,\n        };\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n    }\n\n    toggleModal() {\n        this.state.setIsOpen(!this.setState.isOpen);\n    }\n\n\n    handleOpenModal(index) {\n        this.setState({ showModal: true, currentCustomerIndex: index });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false, currentCustomerIndex: null });\n    }\n\n    render() {\n\n        let customers = products.slice();\n        // this.setState({ customers: customers });\n        this.state.customers = customers;\n\n        for (let i = 0; i < customers.length; i++) {\n            let currentProduct = products[i];\n            currentProduct[\"button\"] = <button onClick={() => this.handleOpenModal(i)}>View</button>\n        }\n\n        let data = this.state.showModal ? this.state.customers[this.state.currentCustomerIndex] : null;\n\n        return (\n            <div>\n                <BootstrapTable striped bordered hover\n                    keyField=\"city\"\n                    data={customers}\n                    columns={columns}\n                />\n                <ReactModal id=\"modal\" className=\"mymodal\" isOpen={this.state.showModal} contentLabel=\"Minimal Modal Example\"\n                    overlayClassName=\"myoverlay\" closeTimeoutMS={200} onRequestClose={this.handleCloseModal}>\n                    <Customer data={data} onClick={this.handleCloseModal} />\n                </ReactModal>\n            </div>\n        )\n\n    }\n\n}\n\nReactDOM.render(\n    <Panel />,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}