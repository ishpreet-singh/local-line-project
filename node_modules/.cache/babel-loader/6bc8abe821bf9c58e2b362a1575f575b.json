{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ishpreetsingh/workspace/practice/my-app/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport APICall from './util';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ReactModal from 'react-modal';\nimport './index.css';\nimport { products, columns } from './data';\n\nclass CustomerData extends React.Component {\n  render() {\n    console.log(\"Props: \", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-data\",\n      children: [this.props.data.city, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.onClick,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isOpen = useState(false);\n    this.setIsOpen = useState(false);\n    this.state = {\n      customers: [],\n      currentCustomerIndex: null,\n      showModal: false\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  // const [isOpen, setIsOpen] = useState(false);\n  toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  handleOpenModal(index) {\n    this.setState({\n      showModal: true,\n      currentCustomerIndex: index\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n      currentCustomerIndex: null\n    });\n  }\n\n  render() {\n    let customers = products.slice(); // this.setState({ customers: customers });\n\n    this.state.customers = customers;\n    APICall().then(data => {\n      this.setState({\n        customers: data\n      });\n    });\n\n    for (let i = 0; i < customers.length; i++) {\n      let currentProduct = products[i];\n      currentProduct[\"view_button\"] = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleOpenModal(i),\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 45\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onRequestClose: toggleModal,\n      contentLabel: \"My dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n\n    if (!this.state.showModal) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          keyField: \"city\",\n          data: customers,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ReactModal, {\n        id: \"modal\",\n        isOpen: this.state.showModal,\n        contentLabel: \"Minimal Modal Example\",\n        children: /*#__PURE__*/_jsxDEV(CustomerData, {\n          data: this.state.customers[this.state.currentCustomerIndex],\n          onClick: this.handleCloseModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Panel, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 100,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ishpreetsingh/workspace/practice/my-app/src/index.js"],"names":["React","useState","ReactDOM","APICall","BootstrapTable","paginationFactory","ReactModal","products","columns","CustomerData","Component","render","console","log","props","data","city","onClick","Panel","constructor","isOpen","setIsOpen","state","customers","currentCustomerIndex","showModal","handleOpenModal","bind","handleCloseModal","toggleModal","index","setState","slice","then","i","length","currentProduct","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,QAApB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,QAAlC;;AAEA,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AACvCC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKC,KAA5B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACK,KAAKA,KAAL,CAAWC,IAAX,CAAgBC,IADrB,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AATsC;;AAY3C,MAAMC,KAAN,SAAoBlB,KAAK,CAACU,SAA1B,CAAoC;AAGhCS,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAWnBM,MAXmB,GAWVnB,QAAQ,CAAC,KAAD,CAXE;AAAA,SAYnBoB,SAZmB,GAYPpB,QAAQ,CAAC,KAAD,CAZD;AAEf,SAAKqB,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,oBAAoB,EAAE,IAFb;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAKD;AACAE,EAAAA,WAAW,GAAG;AACVR,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH;;AAGDM,EAAAA,eAAe,CAACI,KAAD,EAAQ;AACnB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAE,IAAb;AAAmBD,MAAAA,oBAAoB,EAAEM;AAAzC,KAAd;AACH;;AAEDF,EAAAA,gBAAgB,GAAG;AACf,SAAKG,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAE,KAAb;AAAoBD,MAAAA,oBAAoB,EAAE;AAA1C,KAAd;AACH;;AAEDb,EAAAA,MAAM,GAAG;AAEL,QAAIY,SAAS,GAAGhB,QAAQ,CAACyB,KAAT,EAAhB,CAFK,CAGL;;AACA,SAAKV,KAAL,CAAWC,SAAX,GAAuBA,SAAvB;AAEApB,IAAAA,OAAO,GAAG8B,IAAV,CAAgBlB,IAAD,IAAU;AACrB,WAAKgB,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAER;AAAb,OAAd;AACH,KAFD;;AAIA,SAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,SAAS,CAACY,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIE,cAAc,GAAG7B,QAAQ,CAAC2B,CAAD,CAA7B;AACAE,MAAAA,cAAc,CAAC,aAAD,CAAd,gBAAgC;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKV,eAAL,CAAqBQ,CAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC;AACH;;AAED,wBACI,QAAC,KAAD;AACI,MAAA,MAAM,EAAEd,MADZ;AAEI,MAAA,cAAc,EAAES,WAFpB;AAGI,MAAA,YAAY,EAAC;AAHjB;AAAA;AAAA;AAAA;AAAA,YADJ;;AASA,QAAI,CAAC,KAAKP,KAAL,CAAWG,SAAhB,EAA2B;AACvB,0BACI;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,OAAO,MAAvB;AAAwB,UAAA,QAAQ,MAAhC;AAAiC,UAAA,KAAK,MAAtC;AACI,UAAA,QAAQ,EAAC,MADb;AAEI,UAAA,IAAI,EAAEF,SAFV;AAGI,UAAA,OAAO,EAAEf;AAHb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVD,MAUO;AACH,0BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,OAAf;AAAuB,QAAA,MAAM,EAAE,KAAKc,KAAL,CAAWG,SAA1C;AAAqD,QAAA,YAAY,EAAC,uBAAlE;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,oBAAhC,CAApB;AAA2E,UAAA,OAAO,EAAE,KAAKI;AAAzF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AAEJ;;AAzE+B;;AA6EpC1B,QAAQ,CAACS,MAAT,eACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI0B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport APICall from './util';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ReactModal from 'react-modal';\nimport './index.css';\nimport { products, columns } from './data';\n\nclass CustomerData extends React.Component {\n    render() {\n        console.log(\"Props: \", this.props);\n        return (\n            <div className=\"customer-data\">\n                {this.props.data.city}\n                <button onClick={this.props.onClick} >X</button>\n            </div>\n        );\n    }\n}\n\nclass Panel extends React.Component {\n\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            customers: [],\n            currentCustomerIndex: null,\n            showModal: false,\n        };\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n    }\n\n    isOpen = useState(false);\n    setIsOpen = useState(false);\n\n    // const [isOpen, setIsOpen] = useState(false);\n    toggleModal() {\n        setIsOpen(!isOpen);\n    }\n\n\n    handleOpenModal(index) {\n        this.setState({ showModal: true, currentCustomerIndex: index });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false, currentCustomerIndex: null });\n    }\n\n    render() {\n\n        let customers = products.slice();\n        // this.setState({ customers: customers });\n        this.state.customers = customers;\n\n        APICall().then((data) => {\n            this.setState({ customers: data });\n        });\n\n        for (let i = 0; i < customers.length; i++) {\n            let currentProduct = products[i];\n            currentProduct[\"view_button\"] = <button onClick={() => this.handleOpenModal(i)}>View</button>\n        }\n\n        return (\n            <Modal\n                isOpen={isOpen}\n                onRequestClose={toggleModal}\n                contentLabel=\"My dialog\">\n\n            </Modal>\n        )\n\n        if (!this.state.showModal) {\n            return (\n                <div>\n                    <BootstrapTable striped bordered hover\n                        keyField=\"city\"\n                        data={customers}\n                        columns={columns}\n                    />\n                </div>\n            )\n        } else {\n            return (\n                <ReactModal id=\"modal\" isOpen={this.state.showModal} contentLabel=\"Minimal Modal Example\">\n                    <CustomerData data={this.state.customers[this.state.currentCustomerIndex]} onClick={this.handleCloseModal} />\n                </ReactModal>\n            )\n        }\n\n    }\n\n}\n\nReactDOM.render(\n    <Panel />,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}