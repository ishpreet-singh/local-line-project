{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ishpreetsingh/workspace/practice/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport APICall from './util';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ReactModal from 'react-modal';\nimport './index.css';\n\nclass Customer extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.onClick,\n        children: \"VIEW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass CustomerData extends React.Component {\n  render() {\n    console.log(\"Props: \", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-data\",\n      children: this.props.data.city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: [],\n      isModalActive: false,\n      currentCustomerIndex: null,\n      showModal: false\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleOpenModal(index) {\n    this.setState({\n      showModal: true,\n      currentCustomerIndex: index\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n      currentCustomerIndex: null\n    });\n  }\n\n  renderCustomer(i) {\n    return /*#__PURE__*/_jsxDEV(Customer, {\n      value: this.state.customers[i].business_name,\n      onClick: () => this.showCustomerModal(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderCustomerData() {\n    return /*#__PURE__*/_jsxDEV(CustomerData, {\n      data: this.state.customers[this.state.currentCustomerIndex],\n      onClick: () => this.hideCustomerModal()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    let products = [{\n      \"province\": \"ON\",\n      \"city\": \"Ottawa\",\n      \"country\": \"Canada\",\n      \"business_name\": \"Cole's Cappuccino\"\n    }, {\n      \"province\": \"ON\",\n      \"city\": \"Waterloo\",\n      \"country\": \"Canada\",\n      \"business_name\": \"Jen's Jello\"\n    }, {\n      \"province\": \"ON\",\n      \"city\": \"Kingston\",\n      \"country\": \"Canada\",\n      \"business_name\": \"Brock's Bakery\"\n    }, {\n      \"province\": \"ON\",\n      \"city\": \"Toronto\",\n      \"country\": \"Canada\",\n      \"business_name\": \"Matty's Mango\"\n    }];\n    let columns = [{\n      dataField: 'province',\n      text: 'Province'\n    }, {\n      dataField: 'city',\n      text: 'City'\n    }, {\n      dataField: 'country',\n      text: 'Country'\n    }, {\n      dataField: 'business_name',\n      text: 'Business Name'\n    }, {\n      dataField: 'view_button',\n      text: ''\n    }];\n    let customers = products.slice(); // this.setState({ customers: customers });\n\n    this.state.customers = customers;\n    APICall().then(data => {\n      this.setState({\n        customers: data\n      });\n    });\n\n    for (let i = 0; i < customers.length; i++) {\n      let currentProduct = products[i];\n      currentProduct[\"view_button\"] = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleOpenModal(i),\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }, this);\n    }\n\n    if (!this.state.showModal) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          keyField: \"city\",\n          data: customers,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ReactModal, {\n        id: \"modal\",\n        isOpen: this.state.showModal,\n        contentLabel: \"Minimal Modal Example\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleCloseModal,\n          children: [/*#__PURE__*/_jsxDEV(CustomerData, {\n            data: this.state.customers[this.state.currentCustomerIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), \"X\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Panel, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 155,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ishpreetsingh/workspace/practice/my-app/src/index.js"],"names":["React","ReactDOM","APICall","BootstrapTable","paginationFactory","ReactModal","Customer","Component","render","props","onClick","CustomerData","console","log","data","city","Panel","constructor","state","customers","isModalActive","currentCustomerIndex","showModal","handleOpenModal","bind","handleCloseModal","index","setState","renderCustomer","i","business_name","showCustomerModal","renderCustomerData","hideCustomerModal","products","columns","dataField","text","slice","then","length","currentProduct","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport APICall from './util';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ReactModal from 'react-modal';\nimport './index.css';\n\nclass Customer extends React.Component {\n    render() {\n        return (\n            <div className=\"customer\">\n                {/* {this.props.value} */}\n                <button onClick={this.props.onClick}>VIEW</button>\n                <button>X</button>\n            </div>\n        );\n    }\n}\n\nclass CustomerData extends React.Component {\n    render() {\n        console.log(\"Props: \", this.props);\n        return (\n            <div className=\"customer-data\">\n                {this.props.data.city}\n            </div>\n        );\n    }\n}\n\nclass Panel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            customers: [],\n            isModalActive: false,\n            currentCustomerIndex: null,\n            showModal: false,\n        };\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n    }\n\n    handleOpenModal(index) {\n        this.setState({ showModal: true, currentCustomerIndex: index });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false, currentCustomerIndex: null });\n    }\n\n    renderCustomer(i) {\n        return <Customer\n            value={this.state.customers[i].business_name}\n            onClick={() => this.showCustomerModal(i)}\n        />;\n    }\n\n    renderCustomerData() {\n        return <CustomerData\n            data={this.state.customers[this.state.currentCustomerIndex]}\n            onClick={() => this.hideCustomerModal()}\n        />;\n    }\n\n    render() {\n\n        let products = [\n            {\n                \"province\": \"ON\",\n                \"city\": \"Ottawa\",\n                \"country\": \"Canada\",\n                \"business_name\": \"Cole's Cappuccino\"\n            },\n            {\n                \"province\": \"ON\",\n                \"city\": \"Waterloo\",\n                \"country\": \"Canada\",\n                \"business_name\": \"Jen's Jello\"\n            },\n            {\n                \"province\": \"ON\",\n                \"city\": \"Kingston\",\n                \"country\": \"Canada\",\n                \"business_name\": \"Brock's Bakery\"\n            },\n            {\n                \"province\": \"ON\",\n                \"city\": \"Toronto\",\n                \"country\": \"Canada\",\n                \"business_name\": \"Matty's Mango\"\n            }\n        ]\n\n        let columns = [{\n            dataField: 'province',\n            text: 'Province'\n        }, {\n            dataField: 'city',\n            text: 'City'\n        }, {\n            dataField: 'country',\n            text: 'Country'\n        }, {\n            dataField: 'business_name',\n            text: 'Business Name'\n        }, {\n            dataField: 'view_button',\n            text: ''\n        }];\n\n        let customers = products.slice();\n        // this.setState({ customers: customers });\n        this.state.customers = customers;\n\n        APICall().then((data) => {\n            this.setState({ customers: data });\n        });\n\n        for (let i = 0; i < customers.length; i++) {\n            let currentProduct = products[i];\n            currentProduct[\"view_button\"] = <button onClick={() => this.handleOpenModal(i)}>View</button>\n        }\n\n        if (!this.state.showModal) {\n            return (\n\n                <div>\n                    <BootstrapTable striped bordered hover\n                        keyField=\"city\"\n                        data={customers}\n                        columns={columns}\n                    />\n                </div>\n            )\n        } else {\n            return (\n\n                <ReactModal id=\"modal\" isOpen={this.state.showModal} contentLabel=\"Minimal Modal Example\">\n                    <button onClick={this.handleCloseModal}>\n                        <CustomerData data={this.state.customers[this.state.currentCustomerIndex]} />\n                        X\n                    </button>\n                </ReactModal>\n            )\n        }\n\n    }\n\n}\n\nReactDOM.render(\n    <Panel />,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}